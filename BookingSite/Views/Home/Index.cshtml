@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options
@inject IViewLocalizer Localizer
@inject IOptions<RequestLocalizationOptions> locOptions
@{
    ViewData["Title"] = Localizer["Title"];
}
@{
    // Represents the feature that provides the current request's culture information. (zie cookie culture wordt uitgelezen als deze aanwwezig) is)
    var currentRequestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = locOptions.Value.SupportedUICultures
        .Select(c => new SelectListItem { Value = c.Name, Text = c.DisplayName })
        .ToList();
    var responseUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" :
        $"~{Context.Request.Path.Value}";
}

<div>
    <form id="selectLanguage" asp-controller="Home"
          asp-action="SetAppLanguage" asp-route-returnUrl="@responseUrl"
          method="post" class="form-horizontal" role="form">
        <label asp-for="@currentRequestCulture.RequestCulture.UICulture.Name">
            @Localizer["Select Language"]
        </label>
        <select name="lang" class="setLang"
                asp-for="@currentRequestCulture.RequestCulture.UICulture.Name"
                asp-items="cultureItems">
        </select>
    </form>
</div>


<section class="home-intro">
    <div class="container">
        <h1>@Localizer["welcomeTitle"].Value</h1>
        <p>@Localizer["welcomeDescription"].Value</p>

        <ul>
            <li>✈️ <strong>@Localizer["dailyFlights"].Value</strong></li>
            <li>🔁 <strong>@Localizer["flexibleRoutes"].Value</strong></li>
            <li>🪑 <strong>@Localizer["personalizedService"].Value</strong></li>
            <li>🏨 <strong>@Localizer["hotelBookings"].Value</strong></li>
        </ul>

        <p>@Localizer["callToAction"].Value</p>
    </div>
</section>



