@using BookingSite.ViewModels
@model BookingSite.ViewModels.TicketOverviewViewModel

<div>
    <p>From: <br/>
        @Model.FromAirport</p> 
    <p>To: <br/>
        @Model.ToAirport</p>
    <p>Transfers: <br/>
        @Model.RouteSegments</p>
    <p>Date: <br/>
        @Model.Date</p>
    <p>Price: <br/>
        â‚¬ @Model.Price</p>
    <p>Additional fees: </p>
</div>

<div>
    <!--Om de shopping cart te laten werken met een button, moeten we dit doen om een form aan te maken en dit te posten-->
    <form asp-action="AddToShoppingCart" method="post">
        <input type="hidden" name="Date" value="@Model.FlightId" />
        <input type="hidden" name="Date" value="@Model.Date"/>
        <input type="hidden" name="FromAirport" value="@Model.FromAirport"/>
        <input type="hidden" name="ToAirport" value="@Model.ToAirport"/>
        <input type="hidden" name="RouteSegments" value="@Model.RouteSegments"/>
        <input type="hidden" name="Price" value="@Model.Price"/>

        <p>Mealchoice:</p>
        <select asp-for="SelectedMeal" asp-items="@Model.Meals"></select>

        <p>Travel class: </p>
        <select name="SelectedClass">
            @foreach (TravelClassViewModel item in Model.Classes)
            {
                @if (item.Available)
                {
                    <option value="@item.Id">@item.Type</option>
                }
                else
                {
                    <option value="@item.Id" disabled="disabled">@item.Type</option>
                }
            }
        </select>
        <br/>
        <button type="submit">Add to shopping cart</button>
    </form>
</div>